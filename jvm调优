查看java进程


jps -m -l
jps -v

jmap -dump:format=b,file=1.dump pid

jvisualvm
启动图形界面
 文件-》装入-》文件格式，选择堆，并选择1.dump，可以观察内存


线程情况：
 jstack 62595 >thread.dump

 查看进程对应的线程
 ps -T -p pid
 top -H -p pid
 
 将十进制的进程ip转成十六进制
 print "%x" pid
 
 在thread.dump中使用十六进制搜索到对应的线程。
 
 
 查看gc情况
 参考：
 https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html
 
 1s采样，10次
 结果的单位：容量大小为:KB,时间为:s

 jstat -gc 61721 1s 10
 jstat -gcutil 61721 1s 10
 jstat -gcnew 61721 1s 10
 jstat -gcnewcapacity 61721 1s 10
 jstat -gcold 61721  1s 10
 jstat -gcoldcapacity 61721 1s 10
 jstat -printcompilation 61721 1s 10
 jstat -compiler 61721 1s 10
 
 jvisualvm gc插件安装
 jvisualvm->工具->插件->安装Visual GC插件，安装完重启
 
 
 export HADOOP_DATANODE_OPTS=" -Xmx10g -Xms10g -Xmn4g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSCompactAtFullCollection -XX:+CMSParallelRemarkEnabled -XX:CMSFullGCsBeforeCompaction=0 -XX:CMSMaxAbortablePrecleanTime=1000 -XX:+CMSClassUnloadingEnabled -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=10  -Xloggc:/data0/hadoop-logs/gc_datanode_${timestamp}.log  -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -XX:+PrintTenuringDistribution -Dhadoop.security.logger=ERROR,RFAS $HADOOP_DATANODE_OPTS"
 
查看已经加载的类
-verbose:class 




