hive安装及hadoop安装


环境变量：
$ vi /etc/profile
export JAVA_HOME=/opt/jdk1.8.0_144
export HIVE_HOME=/opt/apache-hive-2.3.2-bin
export HADOOP_HOME=/opt/hadoop-2.9.0
export PATH=$PATH:$JAVA_HOME/bin:$HIVE_HOME/bin:$HADOOP_HOME/bin

$ source /etc/profile


hadoop安装

官方写安装ssh，一般系统里自带。没有执行。
$ yum install -y rsync

$ wget http://apache.website-solution.net/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz
$ tar xvzf hadoop-2.9.0.tar.gz
$ vi etc/hadoop/hadoop-env.sh
export JAVA_HOME=/opt/jdk1.8.0_144
$ vi etc/hadoop/core-site.xml
<configuration>
    <property>
        <name>fs.defaultFS</name>
        <value>hdfs://localhost:9000</value>
    </property>
</configuration>
$ vi etc/hadoop/hdfs-site.xml:
<configuration>
    <property>
        <name>dfs.replication</name>
        <value>1</value>
    </property>
</configuration>

  $ ssh localhost
  $ ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
  $ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  $ chmod 0600 ~/.ssh/authorized_keys


$ bin/hdfs namenode -format
$ sbin/start-dfs.sh



 $ wget http://apache.website-solution.net/hive/hive-2.3.2/apache-hive-2.3.2-bin.tar.gz

$ tar xvf apache-hive-2.3.2-bin.tar.gz 
$ cd apache-hive-2.3.2-bin/

$ hadoop fs -mkdir /tmp
$ hadoop fs -mkdir /user
$ hadoop fs -mkdir /user/hive
$ hadoop fs -mkdir /user/hive/warehouse
$ hadoop fs -chmod g+w   /tmp
$ hadoop fs -chmod g+w   /user/hive/warehouse

https://dev.mysql.com/downloads/connector/j/下载程序
$ wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz
$ wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz
$ tar xvzf mysql-connector-java-5.1.44.tar.gz 
$ cd mysql-connector-java-5.1.44/
$ cp mysql-connector-java-5.1.44-bin.jar  /opt/apache-hive-2.3.2-bin/lib/

登录mysql
$ mysql -h192.168.123.1 -u root -p123456   
mysql> create database hive_db;

$ vi hive-site.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<configuration> 
    <property>
        <name>dfs.replication</name>
        <value>1</value>
    </property> 
    <property>  
        <name>hive.metastore.warehouse.dir</name>  
        <value>/usr/hive/warehouse</value>  
        <description>location of default database for the warehouse</description>  
    </property>  
    <property>  
        <name>hive.metastore.local</name>  
        <value>true</value>  
        <description>Use false if a production metastore server is used</description>  
    </property>  
    <property>  
        <name>hive.exec.scratchdir</name>  
        <value>/tmp/hive</value>  
        <description></description>  
    </property>  
    <property>  
        <name>javax.jdo.option.ConnectionURL</name>  
        <value>jdbc:mysql://192.168.123.1:3306/hive_db?createDatabaseIfNoExist=true</value>  
        <description> Roy  
      JDBC connect string for a JDBC metastore.  
      To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.  
      For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.  
    </description>  
    </property>  
    <property>  
        <name>javax.jdo.option.ConnectionDriverName</name>  
        <value>com.mysql.jdbc.Driver</value>  
        <description>User-Defined(Roy) Driver class name for a JDBC metastore</description>  
    </property>  
    <property>  
        <name>javax.jdo.option.ConnectionUserName</name>  
        <value>root</value>  
        <description>User-defined(Roy)Username to use against metastore database</description>  
    </property>  
    <property>  
        <name>javax.jdo.option.ConnectionPassword</name>  
        <value>123456</value>  
        <description>User-defined(Roy)password to use against metastore database</description>  
    </property>  
</configuration>  

 $ schematool -dbType mysql  -initSchema  

schemaTool completed  


$ hive

CREATE TABLE cust_info(custno INT, name STRING);

select * from cust_info;

SELECT SUBSTR(name,2)  AS shortname FROM cust_info   GROUP BY  SUBSTR(name,2)  sort BY COUNT(1)  LIMIT 100

SELECT * FROM cust_info a WHERE EXISTS 
(SELECT * FROM  (SELECT SUBSTR(NAME,2)  AS shortname ,COUNT(*) AS num FROM cust_info   GROUP BY  SUBSTR(NAME,2) sort  BY num DESC  LIMIT 1) b WHERE SUBSTR(a.NAME,2) = b.shortname );
