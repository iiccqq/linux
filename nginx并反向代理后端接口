安装nginx并反向代理后端接口

一、安装nginx
参考官方文档：http://nginx.org/en/linux_packages.html#RHEL-CentOS

sudo yum install yum-utils
vi /etc/yum.repos.d/nginx.repo

[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true

[nginx-mainline]
name=nginx mainline repo
baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
gpgcheck=1
enabled=0
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true


sudo yum-config-manager --enable nginx-mainline
sudo yum install nginx

二、部署静态页面
1.将前端打包后的文件放到/usr/share/nginx/html
nginx默认配置的静态文件位置：/usr/share/nginx/html


三、启停nginx及重新加载配置
systemctl start nginx
systemctl stop nginx
/usr/sbin/nginx -c /etc/nginx/nginx.conf -s reload

四、配置问题定位
增加错误日志文件位置

关键配置文件
/etc/nginx/nginx.conf
/etc/nginx/conf.d/default.conf

后端的反向代理
upstream backend {
 server 172.16.160.153:8080;
}

location /prod-api/ {
   proxy_pass http://backend/;
}
日志位置
/var/log/nginx/error.log

vue-router里的history模式的支持
location / {
  try_files $uri $uri/ /index.html;
}
发现反向代理请求不到后端，将查看日志，发现
[crit] 27653#27653: *6 connect() to 172.16.160.153:8080 failed (13: Permission denied) while connecting to upstream, client:
因为SeLinux的限制。
参考：https://www.cnblogs.com/songxingzhu/p/10063043.html
1.关闭SeLinux
　　　　1.临时关闭（不用重启机器）：
　　　　　　setenforce 0                  ##设置SELinux 成为permissive模式
　　　　　　##setenforce 1 设置SELinux 成为enforcing模式
　　　　2.修改配置文件需要重启机器：
　　　　　　修改/etc/selinux/config 文件
　　　　　　将SELINUX=enforcing改为SELINUX=disabled
　　　　　　重启机器即可
 静态资源压缩
 
    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_min_length 1k; #不压缩临界值,大于1k的才压缩,一般不用改
    gzip_buffers 4 16k;
    gzip_comp_level 9; #压缩级别,数字越大压缩的越好
    gzip_types  text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/x-icon; #压缩文件类型,缺啥补啥


五、完整的配置参考

/etc/nginx/conf.d/default.conf
upstream backend {
server 172.16.160.153:8080;
}
server {
    listen       80;
    server_name  localhost;
    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_min_length 1k; #不压缩临界值,大于1k的才压缩,一般不用改
    gzip_buffers 4 16k;
    gzip_comp_level 9; #压缩级别,数字越大压缩的越好
    gzip_types  text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/x-icon; #压缩文件类型,缺啥补啥

    access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/error.log debug;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /prod-api/ {
     proxy_pass http://backend/;
   }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
