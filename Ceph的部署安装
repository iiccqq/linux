

部署前准备
https://docs.ceph.com/docs/master/start/quick-start-preflight/#ceph-deploy-setup
https://docs.ceph.com/docs/master/start/quick-ceph-deploy/
https://docs.ceph.com/docs/mimic/radosgw/s3/python/
https://docs.ceph.com/docs/mimic/install/install-ceph-gateway/

sudo subscription-manager repos --enable=rhel-7-server-extras-rpms
sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
这里更换了阿里的源
cat << EOM > /etc/yum.repos.d/ceph.repo
[ceph]
name=ceph
baseurl=http://mirrors.aliyun.com/ceph/rpm-nautilus/el7/x86_64/
gpgcheck=0
priority =1
[ceph-noarch]
name=cephnoarch
baseurl=http://mirrors.aliyun.com/ceph/rpm-nautilus/el7/noarch/
gpgcheck=0
priority =1
[ceph-source]
name=Ceph source packages
baseurl=http://mirrors.aliyun.com/ceph/rpm-nautilus/el7/SRPMS
gpgcheck=0
priority=1
EOM

sudo yum install python-setuptools
sudo yum update
sudo yum install ceph-deploy

sudo yum install ntp ntpdate ntp-doc
sudo yum install openssh-server

echo "ceph-deploy ALL = (root) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/ceph-deploy
sudo chmod 0440 /etc/sudoers.d/ceph-deploy

然后将管理节点，控制其它节点，设置免密
ssh-keygen

Host server1
   Hostname server1
   User ceph-deploy
Host server2
   Hostname server2
   User ceph-deploy
Host server3
   Hostname server3
   User ceph-deploy
  

Bad owner or permissions on .ssh/config的解决
参考：https://blog.csdn.net/zcc_heu/article/details/79017606
sudo chmod 600 config
   

如果报找不到apipkg错。
yum -y install epel-release               
yum -y install python-pip                
pip --version
pip install apipkg

关闭防火墙或者添加允许
sudo firewall-cmd --zone=public --add-service=ceph-mon --permanent
and on OSDs and MDSs:
sudo firewall-cmd --zone=public --add-service=ceph --permanent
Once you have finished configuring firewalld with the --permanent flag, you can make the changes live immediately without rebooting:
sudo firewall-cmd --reload

sudo setenforce 0
To configure SELinux persistently (recommended if SELinux is an issue), modify the configuration file at
vi /etc/selinux/config
SELINUX=permissive

sudo yum install yum-plugin-priorities


ceph-deploy new server4
ceph-deploy install server4 server5 server6
安装会失败，在各个节点手动安装
跟上面步骤一样，手动安装依赖
sudo yum -y install ceph ceph-radosgw

ceph-deploy mgr create server4
使用新的硬盘设备，虚拟机可以增加虚拟硬盘，将虚拟机增加sata设置，硬盘。
ceph-deploy osd create --data /dev/sdb server4
ceph-deploy osd create --data /dev/sdb server5
ceph-deploy osd create --data /dev/sdb server6
ceph-deploy admin  server4 server5 server6

查看服务命令
systemctl list-units --type=service|grep ceph

cd ~/
sudo ceph -s
sudo ceph osd pool create mytest 0
echo "test">testfile.txt
sudo rados put test-object-1 testfile.txt --pool=mytest
sudo rados -p mytest ls
sudo ceph osd pool application enable mytest rgw

修改ceph.conf增加
[client.rgw.server4]
rgw_frontends = "civetweb port=80"

ceph-deploy --overwrite-conf config push server4

使用s3接口
sudo radosgw-admin user create --uid="testuser" --display-name="First User"
{
    "user_id": "testuser",
    "display_name": "First User",
    "email": "",
    "suspended": 0,
    "max_buckets": 1000,
    "subusers": [],
    "keys": [
        {
            "user": "testuser",
            "access_key": "B3U292QGFNN4DCFZ1VHL",
            "secret_key": "5laE0KKS4EayifTwptcVkya1y5PH70a2jAiiAKH1"
        }
    ],
    "swift_keys": [],
    "caps": [],
    "op_mask": "read, write, delete",
    "default_placement": "",
    "default_storage_class": "",
    "placement_tags": [],
    "bucket_quota": {
        "enabled": false,
        "check_on_raw": false,
        "max_size": -1,
        "max_size_kb": 0,
        "max_objects": -1
    },
    "user_quota": {
        "enabled": false,
        "check_on_raw": false,
        "max_size": -1,
        "max_size_kb": 0,
        "max_objects": -1
    },
    "temp_url_keys": [],
    "type": "rgw",
    "mfa_ids": []
}

sudo yum install python-boto
vi s3test.py
import boto.s3.connection

access_key = 'B3U292QGFNN4DCFZ1VHL'
secret_key = '5laE0KKS4EayifTwptcVkya1y5PH70a2jAiiAKH1'
conn = boto.connect_s3(
        aws_access_key_id=access_key,
        aws_secret_access_key=secret_key,
        host='server4', port=7480,
        is_secure=False, calling_format=boto.s3.connection.OrdinaryCallingFormat(),
       )

#bucket = conn.create_bucket('my-new-bucket')
for bucket in conn.get_all_buckets():
    print "{name} {created}".format(
        name=bucket.name,
        created=bucket.creation_date)
    for key in bucket.list():
    	print "{name}\t{size}\t{modified}".format(
            name=key.name,
            size=key.size,
            modified=key.last_modified,
    )
python s3test.py
之后已经创建完my-new-bucket。
这里可以打印出my-new-bucket下的文件。


